var tedu = { configs: { pageSize: 10, pageIndex: 1 }, notify: function (t, e) { $.notify(t, { clickToHide: !0, autoHide: !0, autoHideDelay: 5e3, arrowShow: !0, arrowSize: 5, position: "...", elementPosition: "top right", globalPosition: "top right", style: "bootstrap", className: e, showAnimation: "slideDown", showDuration: 400, hideAnimation: "slideUp", hideDuration: 200, gap: 2 }) }, confirm: function (t, e) { bootbox.confirm({ message: t, buttons: { confirm: { label: "Đồng ý", className: "btn-success" }, cancel: { label: "Hủy", className: "btn-danger" } }, callback: function (t) { t === !0 && e() } }) }, dateFormatJson: function (t) { if (null == t || "" == t) return ""; var e = new Date(parseInt(t.substr(6))), a = e.getMonth() + 1, n = e.getDate(), o = e.getFullYear(), i = e.getHours(), r = e.getMinutes(); return a < 10 && (a = "0" + a), n < 10 && (n = "0" + n), i < 10 && (i = "0" + i), r < 10 && (r = "0" + r), n + "/" + a + "/" + o }, dateTimeFormatJson: function (t) { if (null == t || "" == t) return ""; var e = new Date(parseInt(t.substr(6))), a = e.getMonth() + 1, n = e.getDate(), o = e.getFullYear(), i = e.getHours(), r = e.getMinutes(), d = e.getSeconds(); return a < 10 && (a = "0" + a), n < 10 && (n = "0" + n), i < 10 && (i = "0" + i), r < 10 && (r = "0" + r), d < 10 && (d = "0" + d), n + "/" + a + "/" + o + " " + i + ":" + r + ":" + d }, startLoading: function () { $(".dv-loading").length > 0 && $(".dv-loading").removeClass("hide") }, stopLoading: function () { $(".dv-loading").length > 0 && $(".dv-loading").addClass("hide") }, getStatus: function (t) { return 1 == t ? '<span class="badge bg-green">Kích hoạt</span>' : '<span class="badge bg-red">Khoá</span>' }, formatNumber: function (t, e) { if (!isFinite(t)) return t.toString(); var a = t.toFixed(e).split("."); return a[0] = a[0].replace(/\d(?=(\d{3})+$)/g, "$&,"), a.join(".") }, unflattern: function (t) { for (var e = {}, a = [], n = 0; n < t.length; n += 1){ var o = t[n]; o.children = [], e[o.id] = n, null !== o.parentId ? t[e[o.parentId]].children.push(o) : a.push(o) } return a } }; $(document).ajaxSend(function (t, e, a) { if ("POST" == a.type.toUpperCase() || "PUT" == a.type.toUpperCase()) { var n = $("form").find("input[name='__RequestVerificationToken']").val(); e.setRequestHeader("RequestVerificationToken", n) } }); var HomeController = function () { function t(t, a) { $.ajax({ type: "GET", url: "/Admin/Home/GetRevenue", data: { fromDate: t, toDate: a }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { e(t), tedu.stopLoading() }, error: function (t) { tedu.notify("Có lỗi xảy ra", "error"), tedu.stopLoading() } }) } function e(t) { var e = [], a = []; $.each(t, function (t, a) { e.push([new Date(a.Date).getTime(), a.Revenue]) }), $.each(t, function (t, e) { a.push([new Date(e.Date).getTime(), e.Profit]) }); var n = { grid: { show: !0, aboveData: !0, color: "#3f3f3f", labelMargin: 10, axisMargin: 0, borderWidth: 0, borderColor: null, minBorderMargin: 5, clickable: !0, hoverable: !0, autoHighlight: !0, mouseActiveRadius: 100 }, series: { lines: { show: !0, fill: !0, lineWidth: 2, steps: !1 }, points: { show: !0, radius: 4.5, symbol: "circle", lineWidth: 3 } }, legend: { position: "ne", margin: [0, -25], noColumns: 0, labelBoxBorderColor: null, labelFormatter: function (t, e) { return t + "&nbsp;&nbsp;" }, width: 40, height: 1 }, colors: ["#96CA59", "#3F97EB", "#72c380", "#6f7a8a", "#f7cb38", "#5a8022", "#2c7282"], shadowSize: 0, tooltip: !0, tooltipOpts: { content: "%s: %y.0", xDateFormat: "%d/%m", shifts: { x: -30, y: -50 }, defaultTheme: !1 }, yaxis: { min: 0 }, xaxis: { mode: "time", minTickSize: [1, "day"], timeformat: "%d/%m/%y" } }; $("#chart_plot_02").length && (console.log("Plot2"), $.plot($("#chart_plot_02"), [{ label: "Revenue", data: e, lines: { fillColor: "rgba(150, 202, 89, 0.12)" }, points: { fillColor: "#fff" } }, { label: "Profit", data: a, lines: { fillColor: "rgba(140, 232, 289, 0.12)" }, points: { fillColor: "#fff" } }], n)) } function a() { if ("undefined" != typeof $.fn.daterangepicker) { console.log("init_daterangepicker"); var e = function (t, e, a) { console.log(t.toISOString(), e.toISOString(), a), $("#reportrange span").html(t.format("MMMM D, YYYY") + " - " + e.format("MMMM D, YYYY")) }, a = { startDate: moment().subtract(29, "days"), endDate: moment(), minDate: "01/01/2012", maxDate: moment().format("MM/DD/YYYY"), dateLimit: { days: 60 }, showDropdowns: !0, showWeekNumbers: !0, timePicker: !1, timePickerIncrement: 1, timePicker12Hour: !0, ranges: { Today: [moment(), moment()], Yesterday: [moment().subtract(1, "days"), moment().subtract(1, "days")], "Last 7 Days": [moment().subtract(6, "days"), moment()], "Last 30 Days": [moment().subtract(29, "days"), moment()], "This Month": [moment().startOf("month"), moment().endOf("month")], "Last Month": [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month")] }, opens: "left", buttonClasses: ["btn btn-default"], applyClass: "btn-small btn-primary", cancelClass: "btn-small", format: "MM/DD/YYYY", separator: " to ", locale: { applyLabel: "Submit", cancelLabel: "Clear", fromLabel: "From", toLabel: "To", customRangeLabel: "Custom", daysOfWeek: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], firstDay: 1 } }; $("#reportrange span").html(moment().subtract(29, "days").format("MMMM D, YYYY") + " - " + moment().format("MMMM D, YYYY")), $("#reportrange").daterangepicker(a, e), $("#reportrange").on("show.daterangepicker", function () { console.log("show event fired") }), $("#reportrange").on("hide.daterangepicker", function () { console.log("hide event fired") }), $("#reportrange").on("apply.daterangepicker", function (e, a) { console.log("apply event fired, start/end dates are " + a.startDate.format("MMMM D, YYYY") + " to " + a.endDate.format("MMMM D, YYYY")), t(a.startDate.format("MM/DD/YYYY"), a.endDate.format("MM/DD/YYYY")) }), $("#reportrange").on("cancel.daterangepicker", function (t, e) { console.log("cancel event fired") }), $("#options1").click(function () { $("#reportrange").data("daterangepicker").setOptions(a, e) }), $("#options2").click(function () { $("#reportrange").data("daterangepicker").setOptions(optionSet2, e) }), $("#destroy").click(function () { $("#reportrange").data("daterangepicker").remove() }) } } this.initialize = function () { a(), t() } }, BillController = function () { function t() { $("#txtFromDate, #txtToDate").datepicker({ autoclose: !0, format: "dd/mm/yyyy" }), $("#frmMaintainance").validate({ errorClass: "red", ignore: [], lang: "vi", rules: { txtCustomerName: { required: !0 }, txtCustomerAddress: { required: !0 }, txtCustomerMobile: { required: !0 }, txtCustomerMessage: { required: !0 }, ddlBillStatus: { required: !0 } } }), $("#txt-search-keyword").keypress(function (t) { 13 === t.which && (t.preventDefault(), s()) }), $("#btn-search").on("click", function () { s() }), $("#btn-create").on("click", function () { l(), $("#modal-detail").modal("show") }), $("#ddl-show-page").on("change", function () { tedu.configs.pageSize = $(this).val(), tedu.configs.pageIndex = 1, s(!0) }), $("body").on("click", ".btn-view", function (t) { t.preventDefault(); var e = $(this).data("id"); $.ajax({ type: "GET", url: "/Admin/Bill/GetById", data: { id: e }, beforeSend: function () { tedu.startLoading() }, success: function (t) { var e = t; $("#hidId").val(e.Id), $("#txtCustomerName").val(e.CustomerName), $("#txtCustomerAddress").val(e.CustomerAddress), $("#txtCustomerMobile").val(e.CustomerMobile), $("#txtCustomerMessage").val(e.CustomerMessage), $("#ddlPaymentMethod").val(e.PaymentMethod), $("#ddlCustomerId").val(e.CustomerId), $("#ddlBillStatus").val(e.BillStatus); var a = e.BillDetails; if (null != e.BillDetails && e.BillDetails.length > 0) { var n = "", o = $("#template-table-bill-details").html(); $.each(a, function (t, e) { var a = r(e.ProductId), i = d(e.ColorId), l = c(e.SizeId); n += Mustache.render(o, { Id: e.Id, Products: a, Colors: i, Sizes: l, Quantity: e.Quantity }) }), $("#tbl-bill-details").html(n) } $("#modal-detail").modal("show"), tedu.stopLoading() }, error: function (t) { tedu.notify("Has an error in progress", "error"), tedu.stopLoading() } }) }), $("#btnSave").on("click", function (t) { if ($("#frmMaintainance").valid()) { t.preventDefault(); var e = $("#hidId").val(), a = $("#txtCustomerName").val(), n = $("#txtCustomerAddress").val(), o = $("#ddlCustomerId").val(), i = $("#txtCustomerMobile").val(), r = $("#txtCustomerMessage").val(), d = $("#ddlPaymentMethod").val(), c = $("#ddlBillStatus").val(), u = []; return $.each($("#tbl-bill-details tr"), function (t, a) { u.push({ Id: $(a).data("id"), ProductId: $(a).find("select.ddlProductId").first().val(), Quantity: $(a).find("input.txtQuantity").first().val(), ColorId: $(a).find("select.ddlColorId").first().val(), SizeId: $(a).find("select.ddlSizeId").first().val(), BillId: e }) }), $.ajax({ type: "POST", url: "/Admin/Bill/SaveEntity", data: { Id: e, BillStatus: c, CustomerAddress: n, CustomerId: o, CustomerMessage: r, CustomerMobile: i, CustomerName: a, PaymentMethod: d, Status: 1, BillDetails: u }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { tedu.notify("Save order successful", "success"), $("#modal-detail").modal("hide"), l(), tedu.stopLoading(), s(!0) }, error: function () { tedu.notify("Has an error in progress", "error"), tedu.stopLoading() } }), !1 } }), $("#btnAddDetail").on("click", function () { var t = $("#template-table-bill-details").html(), e = r(null), a = d(null), n = c(null), o = Mustache.render(t, { Id: 0, Products: e, Colors: a, Sizes: n, Quantity: 0, Total: 0 }); $("#tbl-bill-details").append(o) }), $("body").on("click", ".btn-delete-detail", function () { $(this).parent().parent().remove() }), $("#btnExport").on("click", function () { var t = $("#hidId").val(); $.ajax({ type: "POST", url: "/Admin/Bill/ExportExcel", data: { billId: t }, beforeSend: function () { tedu.startLoading() }, success: function (t) { window.location.href = t, tedu.stopLoading() } }) }) } function e() { return $.ajax({ type: "GET", url: "/admin/bill/GetBillStatus", dataType: "json", success: function (t) { m.billStatuses = t; var e = ""; $.each(t, function (t, a) { e += "<option value='" + a.Value + "'>" + a.Name + "</option>" }), $("#ddlBillStatus").html(e) } }) } function a() { return $.ajax({ type: "GET", url: "/admin/bill/GetPaymentMethod", dataType: "json", success: function (t) { m.paymentMethods = t; var e = ""; $.each(t, function (t, a) { e += "<option value='" + a.Value + "'>" + a.Name + "</option>" }), $("#ddlPaymentMethod").html(e) } }) } function n() { return $.ajax({ type: "GET", url: "/Admin/Product/GetAll", dataType: "json", success: function (t) { m.products = t }, error: function () { tedu.notify("Has an error in progress", "error") } }) } function o() { return $.ajax({ type: "GET", url: "/Admin/Bill/GetColors", dataType: "json", success: function (t) { m.colors = t }, error: function () { tedu.notify("Has an error in progress", "error") } }) } function i() { return $.ajax({ type: "GET", url: "/Admin/Bill/GetSizes", dataType: "json", success: function (t) { m.sizes = t }, error: function () { tedu.notify("Has an error in progress", "error") } }) } function r(t) { var e = "<select class='form-control ddlProductId'>"; return $.each(m.products, function (a, n) { e += t === n.Id ? '<option value="' + n.Id + '" selected="select">' + n.Name + "</option>" : '<option value="' + n.Id + '">' + n.Name + "</option>" }), e += "</select>" } function d(t) { var e = "<select class='form-control ddlColorId'>"; return $.each(m.colors, function (a, n) { e += t === n.Id ? '<option value="' + n.Id + '" selected="select">' + n.Name + "</option>" : '<option value="' + n.Id + '">' + n.Name + "</option>" }), e += "</select>" } function c(t) { var e = "<select class='form-control ddlSizeId'>"; return $.each(m.sizes, function (a, n) { e += t === n.Id ? '<option value="' + n.Id + '" selected="select">' + n.Name + "</option>" : '<option value="' + n.Id + '">' + n.Name + "</option>" }), e += "</select>" } function l() { $("#hidId").val(0), $("#txtCustomerName").val(""), $("#txtCustomerAddress").val(""), $("#txtCustomerMobile").val(""), $("#txtCustomerMessage").val(""), $("#ddlPaymentMethod").val(""), $("#ddlCustomerId").val(""), $("#ddlBillStatus").val(""), $("#tbl-bill-details").html("") } function s(t) { $.ajax({ type: "GET", url: "/admin/bill/GetAllPaging", data: { startDate: $("#txtFromDate").val(), endDate: $("#txtToDate").val(), keyword: $("#txtSearchKeyword").val(), page: tedu.configs.pageIndex, pageSize: tedu.configs.pageSize }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (e) { var a = $("#table-template").html(), n = ""; e.RowCount > 0 ? ($.each(e.Results, function (t, e) { n += Mustache.render(a, { CustomerName: e.CustomerName, Id: e.Id, PaymentMethod: u(e.PaymentMethod), DateCreated: tedu.dateTimeFormatJson(e.DateCreated), BillStatus: p(e.BillStatus) }) }), $("#lbl-total-records").text(e.RowCount), void 0 != n && $("#tbl-content").html(n), f(e.RowCount, function () { s() }, t)) : ($("#lbl-total-records").text("0"), $("#tbl-content").html("")), tedu.stopLoading() }, error: function (t) { console.log(t) } }) } function u(t) { var e = $.grep(m.paymentMethods, function (e, a) { return e.Value == t }); return e.length > 0 ? e[0].Name : "" } function p(t) { var t = $.grep(m.billStatuses, function (e, a) { return e.Value == t }); return t.length > 0 ? t[0].Name : "" } function f(t, e, a) { var n = Math.ceil(t / tedu.configs.pageSize); 0 !== $("#paginationUL a").length && a !== !0 || ($("#paginationUL").empty(), $("#paginationUL").removeData("twbs-pagination"), $("#paginationUL").unbind("page")), $("#paginationUL").twbsPagination({ totalPages: n, visiblePages: 7, first: "Đầu", prev: "Trước", next: "Tiếp", last: "Cuối", onPageClick: function (t, a) { tedu.configs.pageIndex = a, setTimeout(e(), 200) } }) } var m = { products: [], colors: [], sizes: [], paymentMethods: [], billStatuses: [] }; this.initialize = function () { $.when(e(), a(), o(), i(), n()).done(function () { s() }), t() } },
    loginController = function () { this.initialize = function () { t() }; var t = function () { $("#frmLogin").validate({ errorClass: "red", ignore: [], lang: "en", rules: { userName: { required: !0 }, password: { required: !0 } } }), $("#btnLogin").on("click", function (t) { if ($("#frmLogin").valid()) { t.preventDefault(); var a = $("#txtUserName").val(), n = $("#txtPassword").val(); e(a, n) } }) }, e = function (t, e) { $.ajax({ type: "POST", data: { Email: t, Password: e }, dateType: "json", url: "/admin/login/authen", success: function (t) { t.Success ? window.location.href = "/Admin/Home/Index" : tedu.notify("Đăng Nhập Lỗi", "error") } }) } }, PageController = function () { function t() { $("#frmMaintainance").validate({ errorClass: "red", ignore: [], lang: "en", rules: { txtNameM: { required: !0 }, txtAliasM: { required: !0 } } }), $("#txt-search-keyword").keypress(function (t) { 13 === t.which && (t.preventDefault(), n()) }), $("#btn-search").on("click", function () { n() }), $("#ddl-show-page").on("change", function () { tedu.configs.pageSize = $(this).val(), tedu.configs.pageIndex = 1, n(!0) }), $("#btn-create").on("click", function () { e(), $("#modal-add-edit").modal("show") }), $("body").on("click", ".btn-edit", function (t) { t.preventDefault(); var e = $(this).data("id"); $.ajax({ type: "GET", url: "/Admin/Page/GetById", data: { id: e }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { var e = t; $("#hidIdM").val(e.Id), $("#txtNameM").val(e.Name), $("#txtAliasM").val(e.Alias), CKEDITOR.instances.txtContentM.setData(e.Content), $("#ckStatusM").prop("checked", 1 === e.Status), $("#modal-add-edit").modal("show"), tedu.stopLoading() }, error: function () { tedu.notify("Có lỗi xảy ra", "error"), tedu.stopLoading() } }) }), $("#btnSaveM").on("click", function (t) { if ($("#frmMaintainance").valid()) { t.preventDefault(); var a = $("#hidIdM").val(), o = $("#txtNameM").val(), i = $("#txtAliasM").val(), r = CKEDITOR.instances.txtContentM.getData(), d = $("#ckStatusM").prop("checked") === !0 ? 1 : 0; return $.ajax({ type: "POST", url: "/Admin/Page/SaveEntity", data: { Id: a, Name: o, Content: r, Status: d, Alias: i }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function () { tedu.notify("Update page successful", "success"), $("#modal-add-edit").modal("hide"), e(), tedu.stopLoading(), n(!0) }, error: function () { tedu.notify("Have an error in progress", "error"), tedu.stopLoading() } }), !1 } return !1 }), $("body").on("click", ".btn-delete", function (t) { t.preventDefault(); var e = $(this).data("id"); tedu.confirm("Are you sure to delete?", function () { $.ajax({ type: "POST", url: "/Admin/Page/Delete", data: { id: e }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function () { tedu.notify("Delete page successful", "success"), tedu.stopLoading(), n() }, error: function () { tedu.notify("Have an error in progress", "error"), tedu.stopLoading() } }) }) }) } function e() { $("#hidIdM").val(0), $("#txtNameM").val(""), $("#txtAliasM").val(""), CKEDITOR.instances.txtContentM.setData(""), $("#ckStatusM").prop("checked", !0) } function a() { var t = { filebrowserImageUploadUrl: "/Admin/Upload/UploadImageForCKEditor?type=Images" }; CKEDITOR.replace("txtContentM", t), $.fn.modal.Constructor.prototype.enforceFocus = function () { $(document).off("focusin.bs.modal").on("focusin.bs.modal", $.proxy(function (t) { this.$element[0] === t.target || this.$element.has(t.target).length || $(t.target).closest(".cke_dialog, .cke").length || this.$element.trigger("focus") }, this)) } } function n(t) { $.ajax({ type: "GET", url: "/admin/page/GetAllPaging", data: { keyword: $("#txt-search-keyword").val(), page: tedu.configs.pageIndex, pageSize: tedu.configs.pageSize }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (e) { var a = $("#table-template").html(), i = ""; e.RowCount > 0 ? ($.each(e.Results, function (t, e) { i += Mustache.render(a, { Name: e.Name, Alias: e.Alias, Id: e.Id, Status: tedu.getStatus(e.Status) }) }), $("#lbl-total-records").text(e.RowCount), void 0 != i && $("#tbl-content").html(i), o(e.RowCount, function () { n() }, t)) : $("#tbl-content").html(""), tedu.stopLoading() }, error: function (t) { console.log(t) } }) } function o(t, e, a) { var n = Math.ceil(t / tedu.configs.pageSize); 0 !== $("#paginationUL a").length && a !== !0 || ($("#paginationUL").empty(), $("#paginationUL").removeData("twbs-pagination"), $("#paginationUL").unbind("page")), $("#paginationUL").twbsPagination({ totalPages: n, visiblePages: 7, first: "Đầu", prev: "Trước", next: "Tiếp", last: "Cuối", onPageClick: function (t, a) { tedu.configs.pageIndex = a, setTimeout(e(), 200) } }) } this.initialize = function () { n(), t(), a() } }, ImageManagement = function () { function t() { $("body").on("click", ".btn-images", function (t) { t.preventDefault(); var n = $(this).data("id"); $("#hidId").val(n), a($("#fileImage")), e(), $("#modal-image-manage").modal("show") }), $("body").on("click", ".btn-delete-image", function (t) { t.preventDefault(), $(this).closest("div").remove() }), $("#fileImage").on("change", function () { for (var t = $(this).get(0), e = t.files, o = new FormData, i = 0; i < e.length; i++)o.append(e[i].name, e[i]); $.ajax({ type: "POST", url: "/Admin/Upload/UploadImage", contentType: !1, processData: !1, data: o, success: function (t) { a($("#fileImage")), n.push(t), $("#image-list").append('<div class="col-md-3"><img width="100"  data-path="' + t + '" src="' + t + '"></div>'), tedu.notify("Đã tải ảnh lên thành công!", "success") }, error: function () { tedu.notify("There was error uploading files!", "error") } }) }), $("#btnSaveImages").on("click", function () { var t = []; $.each($("#image-list").find("img"), function (e, a) { t.push($(this).data("path")) }), $.ajax({ url: "/admin/Product/SaveImages", data: { productId: $("#hidId").val(), images: n }, type: "post", dataType: "json", success: function (t) { $("#modal-image-manage").modal("hide"), $("#image-list").html(""), a($("#fileImage")) } }) }) } function e() { $.ajax({ url: "/admin/Product/GetImages", data: { productId: $("#hidId").val() }, type: "get", dataType: "json", success: function (t) { var e = ""; $.each(t, function (t, a) { e += '<div class="col-md-3"><img width="100" src="' + a.Path + '"><br/><a href="#" class="btn-delete-image">Xóa</a></div>' }), $("#image-list").html(e), a() } }) } function a(t) { } var n = []; this.initialize = function () { t() } }, productController = function () { function t() { $("#frmMaintainance").validate({ errorClass: "red", ignore: [], lang: "vi", rules: { txtNameM: { required: !0 }, ddlCategoryIdM: { required: !0 }, txtPriceM: { required: !0, number: !0 } } }), $("#ddlShowPage").on("change", function () { tedu.configs.pageSize = $(this).val(), tedu.configs.pageIndex = 1, l(!0) }), $("#btnSearch").on("click", function () { l() }), $("#txtKeyword").on("keypress", function (t) { 13 === t.which && l() }), $("#btnCreate").on("click", function () { d(), r(), $("#modal-add-edit").modal("show") }), $("#btnSelectImg").on("click", function () { $("#fileInputImage").click() }), $("#fileInputImage").on("change", function () { for (var t = $(this).get(0), e = t.files, a = new FormData, n = 0; n < e.length; n++)a.append(e[n].name, e[n]); $.ajax({ type: "POST", url: "/Admin/Upload/UploadImage", contentType: !1, processData: !1, data: a, success: function (t) { $("#txtImage").val(t), tedu.notify("Upload image succesful!", "success") }, error: function () { tedu.notify("There was error uploading files!", "error") } }) }), $("body").on("click", ".btn-edit", function (t) { t.preventDefault(); var e = $(this).data("id"); i(e) }), $("body").on("click", ".btn-delete", function (t) { t.preventDefault(); var e = $(this).data("id"); o(e) }), $("#btnSave").on("click", function (t) { n() }), $("#btn-import").on("click", function () { r(), $("#modal-import-excel").modal("show") }), $("#btnImportExcel").on("click", function () { for (var t = $("#fileInputExcel").get(0), e = t.files, a = new FormData, n = 0; n < e.length; n++)a.append("files", e[n]); return a.append("categoryId", $("#ddlCategoryIdImportExcel").combotree("getValue")), $.ajax({ url: "/Admin/Product/ImportExcel", type: "POST", data: a, processData: !1, contentType: !1, success: function (t) { $("#modal-import-excel").modal("hide"), l() } }), !1 }), $("#btn-export").on("click", function () { $.ajax({ type: "POST", url: "/Admin/Product/ExportExcel", beforeSend: function () { tedu.startLoading() }, success: function (t) { window.location.href = t, tedu.stopLoading() }, error: function () { tedu.notify("Has an error in progress", "error"), tedu.stopLoading() } }) }) } function a() { CKEDITOR.replace("txtContent", {}), $.fn.modal.Constructor.prototype.enforceFocus = function () { $(document).off("focusin.bs.modal").on("focusin.bs.modal", $.proxy(function (t) { this.$element[0] === t.target || this.$element.has(t.target).length || $(t.target).closest(".cke_dialog, .cke").length || this.$element.trigger("focus") }, this)) } } function n() { if ($("#frmMaintainance").valid()) { e.preventDefault(); var t = $("#hidIdM").val(), a = $("#txtNameM").val(), n = $("#ddlCategoryIdM").combotree("getValue"), o = $("#txtDescM").val(), i = $("#txtUnitM").val(), r = $("#txtPriceM").val(), c = $("#txtOriginalPriceM").val(), s = $("#txtPromotionPriceM").val(), u = $("#txtTagM").val(), p = $("#txtMetakeywordM").val(), f = $("#txtMetaDescriptionM").val(), m = $("#txtSeoPageTitleM").val(), g = $("#txtSeoAliasM").val(), h = CKEDITOR.instances.txtContent.getData(), v = 1 == $("#ckStatusM").prop("checked") ? 1 : 0, y = $("#ckHotM").prop("checked"), k = $("#ckShowHomeM").prop("checked"); return $.ajax({ type: "POST", url: "/Admin/Product/SaveEntity", data: { Id: t, Name: a, CategoryId: n, Image: "", Price: r, OriginalPrice: c, PromotionPrice: s, Description: o, Content: h, HomeFlag: k, HotFlag: y, Tags: u, Unit: i, Status: v, SeoPageTitle: m, SeoAlias: g, SeoKeywords: p, SeoDescription: f }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { tedu.notify("Update product successful", "success"), $("#modal-add-edit").modal("hide"), d(), tedu.stopLoading(), l(!0) }, error: function () { tedu.notify("Has an error in save product progress", "error"), tedu.stopLoading() } }), !1 } } function o(t) { tedu.confirm("Are you sure to delete?", function () { $.ajax({ type: "POST", url: "/Admin/Product/Delete", data: { id: that }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { tedu.notify("Delete successful", "success"), tedu.stopLoading(), l() }, error: function (t) { tedu.notify("Has an error in delete progress", "error"), tedu.stopLoading() } }) }) } function i(t) { $.ajax({ type: "GET", url: "/Admin/Product/GetById", data: { id: that }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { var e = t; $("#hidIdM").val(e.Id), $("#txtNameM").val(e.Name), r(e.CategoryId), $("#txtDescM").val(e.Description), $("#txtUnitM").val(e.Unit), $("#txtPriceM").val(e.Price), $("#txtOriginalPriceM").val(e.OriginalPrice), $("#txtPromotionPriceM").val(e.PromotionPrice), $("#txtTagM").val(e.Tags), $("#txtMetakeywordM").val(e.SeoKeywords), $("#txtMetaDescriptionM").val(e.SeoDescription), $("#txtSeoPageTitleM").val(e.SeoPageTitle), $("#txtSeoAliasM").val(e.SeoAlias), CKEDITOR.instances.txtContent.setData(e.Content), $("#ckStatusM").prop("checked", 1 == e.Status), $("#ckHotM").prop("checked", e.HotFlag), $("#ckShowHomeM").prop("checked", e.HomeFlag), $("#modal-add-edit").modal("show"), tedu.stopLoading() }, error: function (t) { tedu.notify("Có lỗi xảy ra", "error"), tedu.stopLoading() } }) } function r(t) { $.ajax({ url: "/Admin/ProductCategory/GetAll", type: "GET", dataType: "json", async: !1, success: function (e) { var a = []; $.each(e, function (t, e) { a.push({ id: e.Id, text: e.Name, parentId: e.ParentId, sortOrder: e.SortOrder }) }); var n = tedu.unflattern(a); $("#ddlCategoryIdM").combotree({ data: n }), $("#ddlCategoryIdImportExcel").combotree({ data: n }), void 0 != t && $("#ddlCategoryIdM").combotree("setValue", t) } }) } function d() { $("#hidIdM").val(0), $("#txtNameM").val(""), r(""), $("#txtDescM").val(""), $("#txtUnitM").val(""), $("#txtPriceM").val("0"), $("#txtOriginalPriceM").val(""), $("#txtPromotionPriceM").val(""), $("#txtTagM").val(""), $("#txtMetakeywordM").val(""), $("#txtMetaDescriptionM").val(""), $("#txtSeoPageTitleM").val(""), $("#txtSeoAliasM").val(""), $("#ckStatusM").prop("checked", !0), $("#ckHotM").prop("checked", !1), $("#ckShowHomeM").prop("checked", !1) } function c() { $.ajax({ type: "GET", url: "/admin/product/GetAllCategories", dataType: "json", success: function (t) { var e = "<option value=''>--Select category--</option>"; $.each(t, function (t, a) { e += "<option value='" + a.Id + "'>" + a.Name + "</option>" }), $("#ddlCategorySearch").html(e) }, error: function (t) { console.log(t), tedu.notify("Cannot loading product category data", "error") } }) } function l(t) { var e = $("#table-template").html(), a = ""; $.ajax({ type: "GET", data: { categoryId: $("#ddlCategorySearch").val(), keyword: $("#txtKeyword").val(), page: tedu.configs.pageIndex, pageSize: tedu.configs.pageSize }, url: "/admin/product/GetAllPaging", dataType: "json", success: function (n) { console.log(n), $.each(n.Results, function (t, n) { a += Mustache.render(e, { Id: n.Id, Name: n.Name, Image: null == n.Image ? '<img src="/admin-side/images/user.png" width=25' : '<img src="' + n.Image + '" width=25 />', CategoryName: n.ProductCategory.Name, Price: tedu.formatNumber(n.Price, 0), CreatedDate: tedu.dateTimeFormatJson(n.DateCreated), Status: tedu.getStatus(n.Status) }) }), $("#lblTotalRecords").text(n.RowCount), "" != a && $("#tbl-content").html(a), s(n.RowCount, function () { l() }, t) }, error: function (t) { console.log(t), tedu.notify("Cannot loading data", "error") } }) } function s(t, e, a) { var n = Math.ceil(t / tedu.configs.pageSize); 0 !== $("#paginationUL a").length && a !== !0 || ($("#paginationUL").empty(), $("#paginationUL").removeData("twbs-pagination"), $("#paginationUL").unbind("page")), $("#paginationUL").twbsPagination({ totalPages: n, visiblePages: 7, first: "Đầu", prev: "Trước", next: "Tiếp", last: "Cuối", onPageClick: function (t, a) { tedu.configs.pageIndex = a, setTimeout(e(), 200) } }) } var u = new QuantityManagement, p = new ImageManagement, f = new WholePriceManagement; this.initialize = function () { c(), l(), t(), a(), u.initialize(), p.initialize(), f.initialize() } }, QuantityManagement = function () { function t() { $("body").on("click", ".btn-quantity", function (t) { t.preventDefault(); var a = $(this).data("id"); $("#hidId").val(a), e(), $("#modal-quantity-management").modal("show") }), $("body").on("click", ".btn-delete-quantity", function (t) { t.preventDefault(), $(this).closest("tr").remove() }), $("#btn-add-quantity").on("click", function () { var t = $("#template-table-quantity").html(), e = Mustache.render(t, { Id: 0, Colors: o(null), Sizes: i(null), Quantity: 0 }); $("#table-quantity-content").append(e) }), $("#btnSaveQuantity").on("click", function () { var t = []; $.each($("#table-quantity-content").find("tr"), function (e, a) { t.push({ Id: $(a).data("id"), ProductId: $("#hidId").val(), Quantity: $(a).find("input.txtQuantity").first().val(), SizeId: $(a).find("select.ddlSizeId").first().val(), ColorId: $(a).find("select.ddlColorId").first().val() }) }), $.ajax({ url: "/admin/Product/SaveQuantities", data: { productId: $("#hidId").val(), quantities: t }, type: "post", dataType: "json", success: function (t) { $("#modal-quantity-management").modal("hide"), $("#table-quantity-content").html("") } }) }) } function e() { $.ajax({ url: "/admin/Product/GetQuantities", data: { productId: $("#hidId").val() }, type: "get", dataType: "json", success: function (t) { var e = "", a = $("#template-table-quantity").html(); $.each(t, function (t, n) { e += Mustache.render(a, { Id: n.Id, Colors: o(n.ColorId), Sizes: i(n.SizeId), Quantity: n.Quantity }) }), $("#table-quantity-content").html(e), resetFile() } }) } function a() { return $.ajax({ type: "GET", url: "/Admin/Bill/GetColors", dataType: "json", success: function (t) { r.colors = t }, error: function () { tedu.notify("Có lỗi xảy ra", "error") } }) } function n() { return $.ajax({ type: "GET", url: "/Admin/Bill/GetSizes", dataType: "json", success: function (t) { r.sizes = t }, error: function () { tedu.notify("Có lỗi xảy ra", "error") } }) } function o(t) { var e = "<select class='form-control ddlColorId'>"; return $.each(r.colors, function (a, n) { e += t === n.Id ? '<option value="' + n.Id + '" selected="select">' + n.Name + "</option>" : '<option value="' + n.Id + '">' + n.Name + "</option>" }), e += "</select>" } function i(t) { var e = "<select class='form-control ddlSizeId'>"; return $.each(r.sizes, function (a, n) { e += t === n.Id ? '<option value="' + n.Id + '" selected="select">' + n.Name + "</option>" : '<option value="' + n.Id + '">' + n.Name + "</option>" }), e += "</select>" } var r = { colors: [], sizes: [] }; this.initialize = function () { a(), n(), t() } }, WholePriceManagement = function (t) { function e() { $("body").on("click", ".btn-whole-price", function (t) { t.preventDefault(); var e = $(this).data("id"); $("#hidId").val(e), a(), $("#modal-whole-price").modal("show") }), $("body").on("click", ".btn-delete-whole-price", function (t) { t.preventDefault(), $(this).closest("tr").remove() }), $("#btn-add-whole-price").on("click", function () { var t = $("#template-table-whole-price").html(), e = Mustache.render(t, { Id: 0, FromQuantity: 0, ToQuantity: 0, Price: 0 }); $("#table-content-whole-price").append(e) }), $("#btnSaveWholePrice").on("click", function () { var t = []; $.each($("#table-content-whole-price").find("tr"), function (e, a) { t.push({ Id: $(a).data("id"), ProductId: $("#hidId").val(), FromQuantity: $(a).find("input.txtQuantityFrom").first().val(), ToQuantity: $(a).find("input.txtQuantityTo").first().val(), Price: $(a).find("input.txtWholePrice").first().val() }) }), $.ajax({ url: "/admin/Product/SaveWholePrice", data: { productId: $("#hidId").val(), wholePrices: t }, type: "post", dataType: "json", success: function (t) { $("#modal-whole-price").modal("hide"), $("#table-content-whole-price").html("") } }) }) } function a() { $.ajax({ url: "/admin/Product/GetWholePrices", data: { productId: $("#hidId").val() }, type: "get", dataType: "json", success: function (t) { var e = "", a = $("#template-table-whole-price").html(); $.each(t, function (t, n) { e += Mustache.render(a, { Id: n.Id, FromQuantity: n.FromQuantity, ToQuantity: n.ToQuantity, Price: n.Price }) }), $("#table-content-whole-price").html(e) } }) } this.initialize = function () { e() } }, productCategoryController = function () {
        function t() {
            $("#frmMaintainance").validate({ errorClass: "red", ignore: [], lang: "en", rules: { txtNameM: { required: !0 }, txtOrderM: { number: !0 }, txtHomeOrderM: { number: !0 } } }), $("#btnCreate").off("click").on("click", function () { a(), $("#modal-add-edit").modal("show") }), $("#btnSelectImg").on("click", function () { $("#fileInputImage").click() }), $("#fileInputImage").on("change", function () { for (var t = $(this).get(0), e = t.files, a = new FormData, n = 0; n < e.length; n++)a.append(e[n].name, e[n]); $.ajax({ type: "POST", url: "/Admin/Upload/UploadImage", contentType: !1, processData: !1, data: a, success: function (t) { $("#txtImage").val(t), tedu.notify("Upload image succesful!", "success") }, error: function () { tedu.notify("There was error uploading files!", "error") } }) }), $("body").on("click", "#btnEdit", function (t) { t.preventDefault(); var e = $("#hidIdM").val(); $.ajax({ type: "GET", url: "/Admin/ProductCategory/GetById", data: { id: e }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { var e = t; $("#hidIdM").val(e.Id), $("#txtNameM").val(e.Name), a(e.CategoryId), $("#txtDescM").val(e.Description), $("#txtImageM").val(e.ThumbnailImage), $("#txtSeoKeywordM").val(e.SeoKeywords), $("#txtSeoDescriptionM").val(e.SeoDescription), $("#txtSeoPageTitleM").val(e.SeoPageTitle), $("#txtSeoAliasM").val(e.SeoAlias), $("#ckStatusM").prop("checked", 1 == e.Status), $("#ckShowHomeM").prop("checked", e.HomeFlag), $("#txtOrderM").val(e.SortOrder), $("#txtHomeOrderM").val(e.HomeOrder), $("#modal-add-edit").modal("show"), tedu.stopLoading() }, error: function (t) { tedu.notify("Có lỗi xảy ra", "error"), tedu.stopLoading() } }) }), $("body").on("click", "#btnDelete", function (t) { t.preventDefault(); var e = $("#hidIdM").val(); tedu.confirm("Are you sure to delete?", function () { $.ajax({ type: "POST", url: "/Admin/ProductCategory/Delete", data: { id: e }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { tedu.notify("Deleted success", "success"), tedu.stopLoading(), n() }, error: function (t) { tedu.notify("Has an error in deleting progress", "error"), tedu.stopLoading() } }) }) }), $("#btnSave").on("click", function (t) {
                if ($("#frmMaintainance").valid()) {
                    t.preventDefault(); var a = parseInt($("#hidIdM").val()), o = $("#txtNameM").val(), i = $("#ddlCategoryIdM").combotree("getValue"), r = $("#txtDescM").val(), d = $("#txtImageM").val(), c = parseInt($("#txtOrderM").val()), l = $("#txtHomeOrderM").val(), s = $("#txtSeoKeywordM").val(), u = $("#txtSeoDescriptionM").val(), p = $("#txtSeoPageTitleM").val(), f = $("#txtSeoAliasM").val(), m = 1 == $("#ckStatusM").prop("checked") ? 1 : 0, g = $("#ckShowHomeM").prop("checked");
    $.ajax({ type: "POST", url: "/Admin/ProductCategory/SaveEntity", data: { Id: a, Name: o, Description: r, ParentId: i, HomeOrder: l, SortOrder: c, HomeFlag: g, Image: d, Status: m, SeoPageTitle: p, SeoAlias: f, SeoKeywords: s, SeoDescription: u }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { tedu.notify("Update success", "success"), $("#modal-add-edit").modal("hide"), e(), tedu.stopLoading(), n(!0) }, error: function () { tedu.notify("Has an error in update progress", "error"), tedu.stopLoading() } })
} return !1
})
}
    function e() { $("#hidIdM").val(0), $("#txtNameM").val(""), a(""), $("#txtDescM").val(""), $("#txtOrderM").val(""), $("#txtHomeOrderM").val(""), $("#txtImageM").val(""), $("#txtMetakeywordM").val(""), $("#txtMetaDescriptionM").val(""), $("#txtSeoPageTitleM").val(""), $("#txtSeoAliasM").val(""), $("#ckStatusM").prop("checked", !0), $("#ckShowHomeM").prop("checked", !1) } function a(t) { $.ajax({ url: "/Admin/ProductCategory/GetAll", type: "GET", dataType: "json", async: !1, success: function (e) { var a = []; $.each(e, function (t, e) { a.push({ id: e.Id, text: e.Name, parentId: e.ParentId, sortOrder: e.SortOrder }) }); var n = tedu.unflattern(a); $("#ddlCategoryIdM").combotree({ data: n }), void 0 != t && $("#ddlCategoryIdM").combotree("setValue", t) } }) } function n() { $.ajax({ url: "/Admin/ProductCategory/GetAll", dataType: "json", success: function (t) { var e = []; $.each(t, function (t, a) { e.push({ id: a.Id, text: a.Name, parentId: a.ParentId, sortOrder: a.SortOrder }) }); var a = tedu.unflattern(e); a.sort(function (t, e) { return t.sortOrder - e.sortOrder }), $("#treeProductCategory").tree({ data: a, dnd: !0, onContextMenu: function (t, e) { t.preventDefault(), $("#hidIdM").val(e.id), $("#contextMenu").menu("show", { left: t.pageX, top: t.pageY }) }, onDrop: function (t, e, a) { console.log(t), console.log(e), console.log(a); var o = $(this).tree("getNode", t); if ("append" === a) { var i = []; $.each(o.children, function (t, e) { i.push({ key: e.id, value: t }) }), $.ajax({ url: "/Admin/ProductCategory/UpdateParentId", type: "post", dataType: "json", data: { sourceId: e.id, targetId: o.id, items: i }, success: function (t) { n() } }) } else "top" !== a && "bottom" !== a || $.ajax({ url: "/Admin/ProductCategory/ReOrder", type: "post", dataType: "json", data: { sourceId: e.id, targetId: o.id }, success: function (t) { n() } }) } }) } }) } this.initialize = function () { n(), t() }
}, RoleController = function () { function t() { $("#frmMaintainance").validate({ errorClass: "red", ignore: [], lang: "vi", rules: { txtName: { required: !0 } } }), $("#txt-search-keyword").keypress(function (t) { 13 == t.which && (t.preventDefault(), o()) }), $("#btn-search").on("click", function () { o() }), $("#ddl-show-page").on("change", function () { tedu.configs.pageSize = $(this).val(), tedu.configs.pageIndex = 1, o(!0) }), $("#btn-create").on("click", function () { n(), $("#modal-add-edit").modal("show") }), $("body").on("click", ".btn-grant", function () { $("#hidRoleId").val($(this).data("id")), $.when(e()).done(a($("#hidRoleId").val())), $("#modal-grantpermission").modal("show") }), $("body").on("click", ".btn-edit", function (t) { t.preventDefault(); var e = $(this).data("id"); $.ajax({ type: "GET", url: "/Admin/Role/GetById", data: { id: e }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { var e = t; $("#hidId").val(e.Id), $("#txtName").val(e.Name), $("#txtDescription").val(e.Description), $("#modal-add-edit").modal("show"), tedu.stopLoading() }, error: function (t) { tedu.notify("Có lỗi xảy ra", "error"), tedu.stopLoading() } }) }), $("#btnSave").on("click", function (t) { if ($("#frmMaintainance").valid()) { t.preventDefault(); var e = $("#hidId").val(), a = $("#txtName").val(), i = $("#txtDescription").val(); return $.ajax({ type: "POST", url: "/Admin/Role/SaveEntity", data: { Id: e, Name: a, Description: i }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { tedu.notify("Update role successful", "success"), $("#modal-add-edit").modal("hide"), n(), tedu.stopLoading(), o(!0) }, error: function () { tedu.notify("Has an error", "error"), tedu.stopLoading() } }), !1 } }), $("body").on("click", ".btn-delete", function (t) { t.preventDefault(); var e = $(this).data("id"); tedu.confirm("Are you sure to delete?", function () { $.ajax({ type: "POST", url: "/Admin/Role/Delete", data: { id: e }, beforeSend: function () { tedu.startLoading() }, success: function (t) { tedu.notify("Delete successful", "success"), tedu.stopLoading(), o() }, error: function (t) { tedu.notify("Has an error in deleting progress", "error"), tedu.stopLoading() } }) }) }), $("#btnSavePermission").off("click").on("click", function () { var t = []; $.each($("#tblFunction tbody tr"), function (e, a) { t.push({ RoleId: $("#hidRoleId").val(), FunctionId: $(a).data("id"), CanRead: $(a).find(".ckView").first().prop("checked"), CanCreate: $(a).find(".ckAdd").first().prop("checked"), CanUpdate: $(a).find(".ckEdit").first().prop("checked"), CanDelete: $(a).find(".ckDelete").first().prop("checked") }) }), $.ajax({ type: "POST", url: "/admin/role/SavePermission", data: { listPermmission: t, roleId: $("#hidRoleId").val() }, beforeSend: function () { tedu.startLoading() }, success: function (t) { tedu.notify("Save permission successful", "success"), $("#modal-grantpermission").modal("hide"), tedu.stopLoading() }, error: function () { tedu.notify("Has an error in save permission progress", "error"), tedu.stopLoading() } }) }) } function e(t) { var e = "/admin/Function/GetAll"; return $.ajax({ type: "GET", url: e, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (e) { var a = $("#result-data-function").html(), n = ""; $.each(e, function (t, e) { n += Mustache.render(a, { Name: e.Name, treegridparent: null != e.ParentId ? "treegrid-parent-" + e.ParentId : "", Id: e.Id, AllowCreate: e.AllowCreate ? "checked" : "", AllowEdit: e.AllowEdit ? "checked" : "", AllowView: e.AllowView ? "checked" : "", AllowDelete: e.AllowDelete ? "checked" : "", Status: tedu.getStatus(e.Status) }) }), void 0 != n && $("#lst-data-function").html(n), $(".tree").treegrid(), $("#ckCheckAllView").on("click", function () { $(".ckView").prop("checked", $(this).prop("checked")) }), $("#ckCheckAllCreate").on("click", function () { $(".ckAdd").prop("checked", $(this).prop("checked")) }), $("#ckCheckAllEdit").on("click", function () { $(".ckEdit").prop("checked", $(this).prop("checked")) }), $("#ckCheckAllDelete").on("click", function () { $(".ckDelete").prop("checked", $(this).prop("checked")) }), $(".ckView").on("click", function () { $(".ckView:checked").length == e.length ? $("#ckCheckAllView").prop("checked", !0) : $("#ckCheckAllView").prop("checked", !1) }), $(".ckAdd").on("click", function () { $(".ckAdd:checked").length == e.length ? $("#ckCheckAllCreate").prop("checked", !0) : $("#ckCheckAllCreate").prop("checked", !1) }), $(".ckEdit").on("click", function () { $(".ckEdit:checked").length == e.length ? $("#ckCheckAllEdit").prop("checked", !0) : $("#ckCheckAllEdit").prop("checked", !1) }), $(".ckDelete").on("click", function () { $(".ckDelete:checked").length == e.length ? $("#ckCheckAllDelete").prop("checked", !0) : $("#ckCheckAllDelete").prop("checked", !1) }), void 0 != t && t(), tedu.stopLoading() }, error: function (t) { console.log(t) } }) } function a(t) { var e = "/Admin/Role/ListAllFunction"; return $.ajax({ type: "POST", url: e, data: { roleId: t }, dataType: "json", beforeSend: function () { tedu.stopLoading() }, success: function (t) { var e = t; $.each($("#tblFunction tbody tr"), function (t, a) { $.each(e, function (t, e) { e.FunctionId == $(a).data("id") && ($(a).find(".ckView").first().prop("checked", e.CanRead), $(a).find(".ckAdd").first().prop("checked", e.CanCreate), $(a).find(".ckEdit").first().prop("checked", e.CanUpdate), $(a).find(".ckDelete").first().prop("checked", e.CanDelete)) }) }), $(".ckView:checked").length == $("#tblFunction tbody tr .ckView").length ? $("#ckCheckAllView").prop("checked", !0) : $("#ckCheckAllView").prop("checked", !1), $(".ckAdd:checked").length == $("#tblFunction tbody tr .ckAdd").length ? $("#ckCheckAllCreate").prop("checked", !0) : $("#ckCheckAllCreate").prop("checked", !1), $(".ckEdit:checked").length == $("#tblFunction tbody tr .ckEdit").length ? $("#ckCheckAllEdit").prop("checked", !0) : $("#ckCheckAllEdit").prop("checked", !1), $(".ckDelete:checked").length == $("#tblFunction tbody tr .ckDelete").length ? $("#ckCheckAllDelete").prop("checked", !0) : $("#ckCheckAllDelete").prop("checked", !1), tedu.stopLoading() }, error: function (t) { console.log(t) } }) } function n() { $("#hidId").val(""), $("#txtName").val(""), $("#txtDescription").val("") } function o(t) { $.ajax({ type: "GET", url: "/admin/role/GetAllPaging", data: { keyword: $("#txt-search-keyword").val(), page: tedu.configs.pageIndex, pageSize: tedu.configs.pageSize }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (e) { var a = $("#table-template").html(), n = ""; e.RowCount > 0 ? ($.each(e.Results, function (t, e) { n += Mustache.render(a, { Name: e.Name, Id: e.Id, Description: e.Description }) }), $("#lbl-total-records").text(e.RowCount), void 0 != n && $("#tbl-content").html(n), i(e.RowCount, function () { o() }, t)) : $("#tbl-content").html(""), tedu.stopLoading() }, error: function (t) { console.log(t) } }) } function i(t, e, a) { var n = Math.ceil(t / tedu.configs.pageSize); 0 !== $("#paginationUL a").length && a !== !0 || ($("#paginationUL").empty(), $("#paginationUL").removeData("twbs-pagination"), $("#paginationUL").unbind("page")), $("#paginationUL").twbsPagination({ totalPages: n, visiblePages: 7, first: "Đầu", prev: "Trước", next: "Tiếp", last: "Cuối", onPageClick: function (t, a) { tedu.configs.pageIndex = a, setTimeout(e(), 200) } }) } this.initialize = function () { o(), t() } }, UserController = function () { function t() { $("#frmMaintainance").validate({ errorClass: "red", ignore: [], lang: "en", rules: { txtFullName: { required: !0 }, txtUserName: { required: !0 }, txtPassword: { required: !0, minlength: 6 }, txtConfirmPassword: { equalTo: "#txtPassword" }, txtEmail: { required: !0, email: !0 } } }), $("#txt-search-keyword").keypress(function (t) { 13 === t.which && (t.preventDefault(), o()) }), $("#btn-search").on("click", function () { o() }), $("#ddl-show-page").on("change", function () { tedu.configs.pageSize = $(this).val(), tedu.configs.pageIndex = 1, o(!0) }), $("#btn-create").on("click", function () { a(), n(), $("#modal-add-edit").modal("show") }), $("body").on("click", ".btn-edit", function (t) { t.preventDefault(); var a = $(this).data("id"); $.ajax({ type: "GET", url: "/Admin/User/GetById", data: { id: a }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (t) { var a = t; $("#hidId").val(a.Id), $("#txtFullName").val(a.FullName), $("#txtUserName").val(a.UserName), $("#txtEmail").val(a.Email), $("#txtPhoneNumber").val(a.PhoneNumber), $("#ckStatus").prop("checked", 1 === a.Status), n(a.Roles), e(!0), $("#modal-add-edit").modal("show"), tedu.stopLoading() }, error: function () { tedu.notify("Có lỗi xảy ra", "error"), tedu.stopLoading() } }) }), $("#btnSave").on("click", function (t) { if ($("#frmMaintainance").valid()) { t.preventDefault(); var e = $("#hidId").val(), n = $("#txtFullName").val(), i = $("#txtUserName").val(), r = $("#txtPassword").val(), d = $("#txtEmail").val(), c = $("#txtPhoneNumber").val(), l = []; $.each($('input[name="ckRoles"]'), function (t, e) { $(e).prop("checked") === !0 && l.push($(e).prop("value")) }); var s = $("#ckStatus").prop("checked") === !0 ? 1 : 0; $.ajax({ type: "POST", url: "/Admin/User/SaveEntity", data: { Id: e, FullName: n, UserName: i, Password: r, Email: d, PhoneNumber: c, Status: s, Roles: l }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function () { tedu.notify("Save user succesful", "success"), $("#modal-add-edit").modal("hide"), a(), tedu.stopLoading(), o(!0) }, error: function () { tedu.notify("Has an error", "error"), tedu.stopLoading() } }) } return !1 }), $("body").on("click", ".btn-delete", function (t) { t.preventDefault(); var e = $(this).data("id"); tedu.confirm("Are you sure to delete?", function () { $.ajax({ type: "POST", url: "/Admin/User/Delete", data: { id: e }, beforeSend: function () { tedu.startLoading() }, success: function () { tedu.notify("Delete successful", "success"), tedu.stopLoading(), o() }, error: function () { tedu.notify("Has an error", "error"), tedu.stopLoading() } }) }) }) } function e(t) { $("#txtUserName").prop("disabled", t), $("#txtPassword").prop("disabled", t), $("#txtConfirmPassword").prop("disabled", t) } function a() { e(!1), $("#hidId").val(""), n(), $("#txtFullName").val(""), $("#txtUserName").val(""), $("#txtPassword").val(""), $("#txtConfirmPassword").val(""), $('input[name="ckRoles"]').removeAttr("checked"), $("#txtEmail").val(""), $("#txtPhoneNumber").val(""), $("#ckStatus").prop("checked", !0) } function n(t) { $.ajax({ url: "/Admin/Role/GetAll", type: "GET", dataType: "json", async: !1, success: function (e) { var a = $("#role-template").html(), n = e, o = ""; $.each(n, function (e, n) { var i = ""; void 0 !== t && t.indexOf(n.Name) !== -1 && (i = "checked"), o += Mustache.render(a, { Name: n.Name, Description: n.Description, Checked: i }) }), $("#list-roles").html(o) } }) } function o(t) { $.ajax({ type: "GET", url: "/admin/user/GetAllPaging", data: { categoryId: $("#ddl-category-search").val(), keyword: $("#txt-search-keyword").val(), page: tedu.configs.pageIndex, pageSize: tedu.configs.pageSize }, dataType: "json", beforeSend: function () { tedu.startLoading() }, success: function (e) { var a = $("#table-template").html(), n = ""; e.RowCount > 0 ? ($.each(e.Results, function (t, e) { n += Mustache.render(a, { FullName: e.FullName, Id: e.Id, UserName: e.UserName, Avatar: void 0 === e.Avatar ? '<img src="/admin-side/images/user.png" width=25 />' : '<img src="' + e.Avatar + '" width=25 />', DateCreated: tedu.dateTimeFormatJson(e.DateCreated), Status: tedu.getStatus(e.Status) }) }), $("#lbl-total-records").text(e.RowCount), void 0 !== n && $("#tbl-content").html(n), i(e.RowCount, function () { o() }, t)) : $("#tbl-content").html(""), tedu.stopLoading() }, error: function (t) { console.log(t) } }) } function i(t, e, a) { var n = Math.ceil(t / tedu.configs.pageSize); 0 !== $("#paginationUL a").length && a !== !0 || ($("#paginationUL").empty(), $("#paginationUL").removeData("twbs-pagination"), $("#paginationUL").unbind("page")), $("#paginationUL").twbsPagination({ totalPages: n, visiblePages: 7, first: "Đầu", prev: "Trước", next: "Tiếp", last: "Cuối", onPageClick: function (t, a) { tedu.configs.pageIndex = a, setTimeout(e(), 200) } }) } this.initialize = function () { o(), t() } };